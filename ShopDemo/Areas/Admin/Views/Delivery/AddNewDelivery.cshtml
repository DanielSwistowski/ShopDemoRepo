@model ShopDemo.ViewModels.CrudDeliveryViewModel

@{
    ViewBag.Title = "Nowy sposób dostawy";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Uzupełnij dane</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Option, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Option, new { htmlAttributes = new { @class = "form-control lg-control" } })
                @Html.ValidationMessageFor(model => model.Option, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentOption, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PaymentOption, "Wybierz...", new { @class = "form-control lg-control" })
                @Html.ValidationMessageFor(model => model.PaymentOption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control lg-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RealizationTimeInDays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RealizationTimeInDays, new { htmlAttributes = new { @class = "form-control lg-control" } })
                @Html.ValidationMessageFor(model => model.RealizationTimeInDays, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(m => m.IsActive)
                    @Html.LabelFor(m => m.IsActive)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval", "~/bundles/jquerydecimal")
}

<script>
    $(document).ready(function () {
        $('#RealizationTimeInDays').attr('data-val-number', 'Nieprawidłowa wartość');
        $('#Price').attr('data-val-number', 'Nieprawidłowa wartość');
    });
</script>