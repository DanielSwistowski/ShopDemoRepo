@model ShopDemo.ViewModels.AddProductViewModel

@{
    ViewBag.Title = "Dodaj nowy produkt";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("AddProduct", "Product", FormMethod.Post, new { id = "productForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Produkt</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group" id="selectedPictures" data-selectedpictures="@Json.Encode(Model.ProductGallery)">
            @Html.Label("Zdjęcia", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <fieldset id="formFieldset">
                    <div class="col-md-2">
                        <img id="img1" class="productPhoto img-thumbnail" src="@Url.Content("~/Content/noimage.png")" alt="" />
                        <button type="button" id="deleteImg1" data-target="1" class="btn btn-danger text-center margin-top-5"><span class="glyphicon glyphicon-trash"></span></button>
                        <div id="photoFileData1"></div>
                    </div>
                    <div class="col-md-2">
                        <img id="img2" class="productPhoto img-thumbnail" src="@Url.Content("~/Content/noimage.png")" alt="" />
                        <button type="button" id="deleteImg2" data-target="2" class="btn btn-danger text-center margin-top-5"><span class="glyphicon glyphicon-trash"></span></button>
                        <div id="photoFileData2"></div>
                    </div>
                    <div class="col-md-2">
                        <img id="img3" class="productPhoto img-thumbnail" src="@Url.Content("~/Content/noimage.png")" alt="" />
                        <button type="button" id="deleteImg3" data-target="3" class="btn btn-danger text-center margin-top-5"><span class="glyphicon glyphicon-trash"></span></button>
                        <div id="photoFileData3"></div>
                    </div>
                    <div class="col-md-2">
                        <img id="img4" class="productPhoto img-thumbnail" src="@Url.Content("~/Content/noimage.png")" alt="" />
                        <button type="button" id="deleteImg4" data-target="4" class="btn btn-danger text-center margin-top-5"><span class="glyphicon glyphicon-trash"></span></button>
                        <div id="photoFileData4"></div>
                    </div>
                    <div class="col-md-2">
                        <img id="img5" class="productPhoto img-thumbnail" src="@Url.Content("~/Content/noimage.png")" alt="" />
                        <button type="button" id="deleteImg5" data-target="5" class="btn btn-danger text-center margin-top-5"><span class="glyphicon glyphicon-trash"></span></button>
                        <div id="photoFileData5"></div>
                    </div>
                </fieldset>
                <input id="txtUploadFile" data-url="@Url.Action("SavePhotoFile", "Photo")" type="file" name="files" multiple accept=".jpg, .jpeg, .png" style="display:none" />
                <button id="btnBrowse" type="button" class="btn btn-success margin-top-5" style="display:normal"><span class="glyphicon glyphicon-folder-open"></span> Przeglądaj</button>
                <span id="ajaxLoader" style="display:none"><img src="@Url.Content("~/Content/defaultLoader.gif")" style="margin-top:5px" alt="Loading" /></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control no-resize", @rows = 8 } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control sm-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control sm-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <h4>Kategoria</h4>
        @Html.ValidationMessageFor(m => m.SelectedCategories, "", new { @class = "text-danger" })
        <hr />
        <input id="categoryExistsAsParent" type="hidden" value="0" data-url="@Url.Action("CategoryExistsAsParentJson", "Category")" />
        <div id="categoriesDropdowns" data-url="@Url.Action("GetCategoriesForDropDownJson", "Category")" data-selectedcategories="@Json.Encode(Model.SelectedCategories)" data-resolveselectedcategoriesurl="@Url.Action("ResolveSelectedCategoriesForDropDown","Category")"></div>

        <br />
        <h4>Specyfikacja techniczna</h4>
        @Html.ValidationMessageFor(m => m.ProductDetails, "", new { @class = "text-danger", id = "productDetailsError" })
        <hr />
        <div id="productAttributes" data-url="@Url.Action("GetProductAttributesWithValuesJson", "ProductAttribute")" data-selectedattributes="@Json.Encode(Model.ProductDetails)">Brak danych</div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-success" id="btnSave" />
            </div>
        </div>
    </div>
}

<input type="hidden" id="modelState" value="@Json.Encode(ViewData.ModelState.IsValid)" />
<input type="hidden" id="deleteUnsavedGalleryUrl" value="@Url.Action("DeleteUnsavedGallery", "Photo")" />
<input type="hidden" id="noImageSrc" value="@Url.Content("~/Content/noimage.png")" />
<input type="hidden" id="deletePhotoUrl" value="@Url.Action("DeletePhotoFile", "Photo")" />
<input type="hidden" id="findCategoryByProductNameUrl" value="@Url.Action("FindProductCategoriesByProductName", "Category")" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval", "~/bundles/jquerydecimal", "~/bundles/addProduct")
}