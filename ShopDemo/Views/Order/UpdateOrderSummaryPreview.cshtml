@model ShopDemo.ViewModels.UpdateOrderSummaryViewModel
@using ShopDemo.CustomHelpers;

@{
    ViewBag.Title = "Podsumowanie";
}

<h2>@ViewBag.Title</h2>

<div class="row">
    <div class="col-md-6">
        @Html.Partial("_OrderPartial", Model.OrderBaseData)
    </div>
</div>

<h3>@Html.DisplayNameFor(model => model.ProductsFromOrder)</h3>
<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(model => model.ProductsFromOrder[0].ProductName) </th>
        <th>@Html.DisplayNameFor(model => model.ProductsFromOrder[0].ProductQuantity)</th>
        <th>@Html.DisplayNameFor(model => model.ProductsFromOrder[0].ProductUnitPrice)</th>
        <th>@Html.DisplayNameFor(model => model.ProductsFromOrder[0].Total)</th>
    </tr>
    @foreach (var item in Model.ProductsFromOrder)
    {
        <tr>
            <td>@Html.ActionLink(item.ProductName, "ProductDetails", "Product", new { productId = item.ProductId, productName = item.ProductName.ToSeoUrl() }, new { @class = "undecorated" })</td>
            <td>@Html.DisplayFor(i => item.ProductQuantity)</td>
            <td>@Html.DisplayFor(i => item.ProductUnitPrice)</td>
            <td>@Html.DisplayFor(i => item.Total)</td>
        </tr>
    }
</table>
<br />

<h3>@Html.DisplayNameFor(model => model.Products)</h3>
<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(model => model.Products[0].ProductName) </th>
        <th>@Html.DisplayNameFor(model => model.Products[0].ProductCount)</th>
        <th>@Html.DisplayNameFor(model => model.Products[0].ProductPrice)</th>
        <th>@Html.DisplayNameFor(model => model.Products[0].ProductTotalPrice)</th>
    </tr>
    @foreach (var item in Model.Products)
    {
        <tr>
            <td>@Html.ActionLink(item.ProductName, "ProductDetails", "Product", new { productId = item.ProductId, productName = item.ProductName.ToSeoUrl() }, new { @class = "undecorated" })</td>
            <td>@Html.DisplayFor(i => item.ProductCount)</td>
            <td>@Html.DisplayFor(i => item.ProductPrice)</td>
            <td>@Html.DisplayFor(i => item.ProductTotalPrice)</td>
        </tr>
    }
</table>
<br />


<h3>@Html.DisplayNameFor(model => model.DeliveryOption)</h3>
<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(model => model.DeliveryOption.Option)</th>
        <th>@Html.DisplayNameFor(model => model.DeliveryOption.PaymentOption)</th>
        <th>@Html.DisplayNameFor(model => model.DeliveryOption.RealizationTimeInDays)</th>
        <th>@Html.DisplayNameFor(model => model.DeliveryOption.Price)</th>
    </tr>

    <tr>
        <td>@Html.DisplayFor(o => Model.DeliveryOption.Option)</td>
        <td>@Html.GetEnumDisplayName(Model.DeliveryOption.PaymentOption)</td>
        <td>@Html.DisplayFor(o => Model.DeliveryOption.RealizationTimeInDays)</td>
        <td>@Html.DisplayFor(o => Model.DeliveryOption.Price)</td>
    </tr>
</table>


<div class="row">
    <div class="pull-left body-content">
        <h3>@Html.DisplayNameFor(model => model.TotalPrice)</h3>
    </div>
    <div class="pull-right body-content">
        <h3>@Html.DisplayFor(m => Model.TotalPrice)</h3>
    </div>
</div>
<br />

<div class="row">
    <div class="pull-right">
        @Html.ActionLink("Zaktualizuj zamówienie", "UpdateOrder", "Order", new { orderId = Model.OrderBaseData.OrderId }, new { @class = "btn btn-success" })
    </div>
</div>
